
create or replace table wmt-everest.mfc_data.top_market_analysis_mfc_candidates as 

with store_id_list as (
select distinct store store_id, market_id from wmt-everest.mfc_data.mfc_roadmap_new_model_run_121_stores
union all
select distinct site_nbr store_id, market_id from wmt-everest.mfc_data.top_market_analysis_store_level_summary
where Status is not null
)

, store_id_list_dedup as ( 
select distinct store_id, market_id from store_id_list
)

, mfc_model_run_121_stores as (
select
  Store
  , market_id
  , facility_type
  , site_type
  , capacity
  , MFC_Forced MFC_Forced_raw
  , case
      when MFC_Forced = true then 'Yes' 
      when MFC_Forced = false then 'No'
      else 'NULL' end MFC_Forced  
  , total_demand -- unit model result, column K
  , current_demand current_demand_model
  , store_MPC
from wmt-everest.mfc_data.mfc_roadmap_new_model_run_121_stores
)

-- select * from mfc_model_run_121_stores
, store_level_summary as (
select
  site_nbr
  , cbsa
  , SUBDIV_NM Store_BU
  , current_demand 
  , FY24_cap
  , Current_Util
  , Type
  , Current_Soln
  , Remodel_Date
  , Remodel_MPC_raw
  , MFC_FY_Approved
  , case when Status is not null then Status else 'NULL' end MFC_Status
  , Status
  , MFC_MPC_Approved
  , MFC_FY_Approved_and_Roadmap
  , MFC_MPC_Approved_and_Roadmap
  , FY26_UB
  , FY29_UB
  , FY26_Util_mfc
  , FY29_Util_mfc
from wmt-everest.mfc_data.top_market_analysis_store_level_summary
)

, market_level_summary as (
select
  market_id
  , SUBDIV_NM Market_BU
  , list_of_stores
  , num_of_stores
  , num_of_SUP
  , Current_Util Market_Current_Util
  , FY26_Util_mfc Market_FY26_Util
  , FY29_Util_mfc Market_FY29_Util
  , store_current_util_greater_than_70
  , store_FY26_Util_mfc_greater_than_70
from wmt-everest.mfc_data.top_market_analysis_market_level_summary
)

select 
  a.*
  , b.* except(store, market_id)
  , c.* except(site_nbr)
  , d.* except(market_id)
from store_id_list_dedup a 
left join mfc_model_run_121_stores b on a.store_id = b.store
left join store_level_summary c on a.store_id = c.site_nbr
left join market_level_summary d on a.market_id = d.market_id
