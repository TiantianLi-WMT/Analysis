-- Purpose: Compile a Mega Base Query for Store Level Info 
-- Author: Tiantian Li
-- Last Update: 10/17/2023
-- Notes: see ReadMe.md for logic and inputs. 

create or replace table wmt-everest.mfc_data.top_market_analysis_base_query as 

--## 1. Store, Market, and BU Attributes ##---
with store_bu_mapping as (
select distinct
  SUBDIV_NM
  , REGION_NM
  , STORE_NBR     
  , STORE_NAME
  , STATE
  , BANNER_DESC
  , BUO_AREA_MGR_NM
  , SUBDIV_MGR_NM
  , ST_ADDR_LINE_1
  , LATITUDE_DGR
  , LONGITUDE_DGR
from wmt-everest.mfc_data.store_bu_mapping
)

, store_summary as (
select
  site_nbr
  , site_lat
  , site_lng
  , cbsa
  , market_id
  , list_of_stores
from wmt-everest.mfc_data.store_summary_us_20_25_29
)

, market_summary as (
select
  cbsa
  , market_id
  , num_of_stores
  , num_of_SUP
from wmt-everest.mfc_data.market_summary_us_20_25_29
)


--## 2. Current or Historical Performance ##---
-- 2.1 Current Demand (L6W Orders per Day) for Scheduled and Unscheduled
, orders_per_day as (
select
  STORE_NUM
  , round(count(distinct case when FULFMT_TYPE_DESC in ('SCHEDULED_DELIVERY','SCHEDULED_PICKUP','INHOME') and SPARK_SHOPPER_IND is null then SALES_ORDER_NUM else null end) / 42) Scheduled_Opd_Nonexpress_Nonspark -- picking this one for "Scheduled" in this analysis 
  , round(count(distinct case when FULFMT_TYPE_DESC in ('SCHEDULED_DELIVERY','SCHEDULED_PICKUP','INHOME') and SPARK_SHOPPER_IND = 1 then SALES_ORDER_NUM else null end) / 42) Scheduled_Opd_Nonexpress_Spark
  , round(count(distinct case when FULFMT_TYPE_DESC in ('EXPRESS_DELIVERY','EXPRESS_PICKUP') then SALES_ORDER_NUM else null end) /42) Scheduled_Opd_Express
  , round(count(distinct case when FULFMT_TYPE_DESC in ('UNSCHEDULED_DELIVERY','UNSCHEDULED_PICKUP') then SALES_ORDER_NUM else null end) / 42) Unscheduled_Opd -- picking this one for "Unscheduled" in this analysis 
  , round(count(distinct case when FULFMT_TYPE_DESC in ('DELIVERY','PICKUP') then SALES_ORDER_NUM else null end) / 42) Other_Opd
  , round(count(distinct SALES_ORDER_NUM) / 42) Total_Opd -- number may not match sum of previous columns due to rounding
from `wmt-edw-prod.WW_MB_DL_VM.STORE_FULFMT_ORDER_ITEM_360` a
where 1=1
  and ORDER_STATUS_DESC = 'SHIPPED' -- completed orders only
  and RPT_DT between date_sub(date_trunc(current_date(), week(sunday)), interval 6 week) and date_trunc(current_date(), week(sunday))-1  -- past 6 weeks, Sun to Sat
group by 1
order by 1 asc
)

-- Order basket and size for Scheduled and Unscheduled
, gmv_prep as (
select
  site_id
  , case 
      when fulfmt_type in ('OG_regular_delivery','OG_regular_pickup','InHome_delivery') then 'Scheduled' 
      when fulfmt_type in ('DFS', 'SFS') then 'Unscheduled'
      else 'Other' end Demand_Type
  , sum(orders) orders
  , sum(fulfmt_orders) fulfmt_orders
  , sum(units) units
  , sum(GMV) GMV
  , safe_divide(sum(GMV), sum(fulfmt_orders)) order_basket
  , safe_divide(sum(units), sum(fulfmt_orders)) order_size
from wmt-everest.mfc_data.monthly_gmv_by_store_and_fulfillment_type
group by 1,2
)

, scheduled_orders_gmv as (
select 
  site_id
  , order_basket order_basket_scheduled
  , order_size order_size_scheduled
  , GMV GMV_scheduled
  , fulfmt_orders fulfmt_orders_scheduled
from gmv_prep
where Demand_Type = 'Scheduled' 
)

, unscheduled_orders_gmv as (
select 
  site_id
  , order_basket order_basket_unscheduled
  , order_size order_size_unscheduled
  , GMV GMV_unscheduled
  , fulfmt_orders fulfmt_orders_unscheduled
from gmv_prep
where Demand_Type = 'Unscheduled' 
)

, gmv_output as (
select
  a.*
  , b.* except(site_id)
from scheduled_orders_gmv a
left join unscheduled_orders_gmv b on a.site_id = b.site_id
)


, uplh as (
select
  STORE_NBR
  , avg(UPLH) avg_UPLH
from wmt-everest.mfc_data.UPLH_historicals
where 1=1
  and WM_YR_WK_NBR between 202324 and 202335
  and UPLH != 0
group by 1
)


--## 3. Demand Forecast ##--

-- one demand forecast
, one_demand_fcst_prep as (
select
  StoreId
  , extract(year from FY_Date) FY
  , (sum(Sch_Delivery) + sum(Sch_Pickup) + sum(InHome)) / 360 Scheduled_Demand
from wmt-everest.mfc_data.store_one_demand_fcst
where 1=1
  and extract(year from FY_Date) >= 2024
group by 1,2
order by 1,2
)

, one_demand_fcst as (
select * from one_demand_fcst_prep
pivot
(
  sum(round(Scheduled_Demand))  
  FOR cast(FY as int64) in (2024,2025,2026)
)
)

--## 4.Capacity Inputs ##--

, mfc_list as ( -- 444 mfc list, 43 of them approved, 5 of them live
select
  Store
  , Final_MFC_type
  , Status
  , case 
      when left(Final_MFC_type, 1) = 'G' then 1300
      when left(Final_MFC_type, 1) = 'M' then 1100
      when left(Final_MFC_type, 1) = 'H' then 1100      
      else null end MFC_MPC
  , FY_to_reach_max_cap
from wmt-everest.mfc_data.mfc_status_master
)

select 
  a.*
  , b.SUBDIV_NM
  , b.REGION_NM
  , b.STATE
  , b.BANNER_DESC
  , b.SUBDIV_MGR_NM
  , b.ST_ADDR_LINE_1
  , b.LATITUDE_DGR
  , b.LONGITUDE_DGR
  , c.num_of_stores
  , c.num_of_SUP
  , d.MPC current_mpc
  , e.Type
  , e.Current_Soln
  , e.Latest_MPC_assumption_after_remodel
  -- , f.Pick_up_2_0_3_0_Capacity  -- as a reference for now
  -- MFC Approved and Live
  , case when g.Status in ('Approved', 'Live') then g.MFC_MPC else null end MFC_MPC_Approved
  , case when g.Status in ('Approved', 'Live') then g.FY_to_reach_max_cap else null end MFC_FY_Approved
  -- MFC Roadmap
  , g.MFC_MPC MFC_MPC_Approved_and_Roadmap
  , g.FY_to_reach_max_cap MFC_FY_Approved_and_Roadmap
  , g.Final_MFC_type
  , g.Status
  -- PU2.0 Remodel
  , coalesce(i.Possession, i.GO_Date) Remodel_Date
  , i.Project_Type
  , i.Project_Status
  , i.MPC Remodel_MPC
  , o.Scheduled_Opd_Nonexpress_Nonspark current_demand
  , cast(replace(j.FY24,'-','0') as int64) FY24_UB
  , cast(replace(j.FY25,'-','0') as int64) FY25_UB
  , cast(replace(j.FY26,'-','0') as int64) FY26_UB
  , cast(replace(j.FY27,'-','0') as int64) FY27_UB
  , cast(replace(j.FY28,'-','0') as int64) FY28_UB
  , cast(replace(j.FY29,'-','0') as int64) FY29_UB
  , cast(replace(j.FY30,'-','0') as int64) FY30_UB
  , cast(replace(j.FY31,'-','0') as int64) FY31_UB
  , cast(replace(j.FY32,'-','0') as int64) FY32_UB
  , cast(replace(j.FY33,'-','0') as int64) FY33_UB
  , cast(replace(j.FY34,'-','0') as int64) FY34_UB
  , n._2024 FY24_OD
  , n._2025 FY25_OD
  , n._2026 FY26_OD
  , k.avg_UPLH
  , l.order_basket_scheduled
  , l.order_size_scheduled
  , l.GMV_scheduled
  , l.fulfmt_orders_scheduled
  , l.order_basket_unscheduled
  , l.order_size_unscheduled
  , l.GMV_unscheduled
  , l.fulfmt_orders_unscheduled
  , o.Unscheduled_Opd unscheduled_daily_orders
  -- , m.unscheduled_daily_orders
from store_summary a 
left join store_bu_mapping b on a.site_nbr = b.STORE_NBR
left join market_summary c on a.market_id = c.market_id
left join wmt-everest.mfc_data.store_current_mpc d on a.site_nbr = d.store
left join (select distinct Store, Type, Current_Soln, Latest_MPC_assumption_after_remodel from wmt-everest.mfc_data.store_metrics) e on a.site_nbr = e.Store   -- select distinct due to duplicates
left join (select distinct Store, Pick_up_2_0_3_0_Capacity from wmt-everest.mfc_data.store_attributes where Pick_up_2_0_3_0_Capacity is not null and Pick_up_2_0_3_0_Capacity != '0') f on a.site_nbr = f.Store   -- select distinct due to duplicates
-- MFC
left join mfc_list g on a.site_nbr = g.store
-- Planned PU2.0 Remodel
left join wmt-everest.mfc_data.store_remodel_plan i on a.site_nbr = i.Store_Number
-- FCST
left join wmt-everest.mfc_data.store_ub_rebaseline_fcst j on a.site_nbr = j.Store -- upper bound fcst
left join one_demand_fcst n on a.site_nbr = n.StoreId -- one demand forecast
-- UPLH   
left join uplh k on a.site_nbr = k.STORE_NBR
-- GMV
left join gmv_output l on a.site_nbr = cast(l.site_id as int64)
-- Current demand & unscheduled daily orders actuals
left join orders_per_day o on a.site_nbr = o.STORE_NUM
-- left join current_demand o on a.site_nbr = o.site_id
-- left join unscheduled_orders m on a.site_nbr = cast(m.site_id as int64)

---------------------------------------------
--## Appendix: other code templates
 
-- , current_demand as (
-- select 
--   cast(site_id as int64) site_id
--   , sum(demand_orders) / 30 as current_demand
-- from `wmt-everest.AUM.lmd_hist_pixel_source_demand`
-- where 1=1
--   and fulfmt_type in ('OG_regular_delivery','OG_regular_pickup','InHome_delivery')  --  ('OG_regular_delivery','OG_regular_pickup','OG_express_delivery','OG_express_pickup')
--   and year_id = 2023
--   and month_id = 8 
-- group by 1
-- order by 1
-- )

-- unscheduled daily orders actuals (past 3 months)
-- , unscheduled_orders_prep as (
-- select 
--   site_id
--   , month_id
--   , year_id
--   , sum(demand_orders) / 31 daily_avg_demand
-- from `wmt-everest.AUM.lmd_hist_pixel_source_demand` 
-- where 1=1 
--   and fulfmt_type in ('FC_sort', 'DFS', 'SFS')
--   and year_id = 2023 
--   and month_id in (7,8,9)
-- group by 1,2,3
-- )

-- , unscheduled_orders as (
-- select
--   site_id
--   , avg(daily_avg_demand) unscheduled_daily_orders
-- from unscheduled_orders_prep
-- group by 1
-- )
